#version 410
layout (location = 0) in vec3 VertexPosition;
layout (location = 1) in vec3 VertexNormal;
layout (location = 2) in vec2 VertexTexCoord;

out vec4 WorldPosition;
out vec4 ViewPosition;
out vec3 TNormal;
out vec2 TexCoord;


// Coordinate to be used for shadow map lookup 
out vec4 ShadowCoord[10];

//Matrices-----------------------------------------
uniform mat4 ModelMatrix;
uniform mat4 ViewMatrix;
uniform mat3 NormalMatrix;
uniform mat4 ProjectionMatrix;		   
uniform mat4 BiasMatrix;
uniform mat4 ShadowViewProj[10];
uniform int nrOfLights;

void main()
{
	TexCoord = VertexTexCoord;
	TNormal = normalize(NormalMatrix * VertexNormal);
	mat4 ModelViewMatrix = ViewMatrix * ModelMatrix;
	WorldPosition = ModelMatrix * vec4(VertexPosition,1.0);
	ViewPosition = ModelViewMatrix * vec4(VertexPosition,1.0);

	mat4 MVP = ProjectionMatrix * ModelViewMatrix;

	// ShadowMatrix converts from modeling coordinates to shadow map coordinates.  
	for(int i = 0; i < nrOfLights; i++)
	{
		ShadowCoord[i] = BiasMatrix * ShadowViewProj[i] * ModelMatrix * vec4(VertexPosition,1.0);
	}

	gl_Position = MVP * vec4(VertexPosition,1.0);
}